syntax = "proto3";

package rpc.protocol;


// 消息头结构
message MessageHeader {
    uint32 header_size = 1; // 请求头大小
    uint32 request_id = 2;  // 唯一请求ID，用于匹配请求与响应
    bytes service = 3;      // RPC服务的名字
    bytes method = 4;       // RPC方法的名字
    uint32 body_size = 5;   // 消息体的长度，便于解包
}

message RequestBody {
    bytes params = 1;       // 具体的请求参数，使用 Protobuf 编码成字节流
}

// 完整的请求消息
message RpcRequest {
    MessageHeader header = 1;  // 消息头
    RequestBody body = 2;      // 消息体
}


// 响应消息体
message ResponseBody {
    bool success = 1;       // 请求是否成功
    bytes result = 2;       // 返回的结果，Protobuf 编码后的字节流
    bytes error_message = 3;  // 如果失败，返回错误信息
}

// 完整的响应消息
message RpcResponse {
    MessageHeader header = 1;  // 消息头
    ResponseBody body = 2;     // 消息体
}



message Header{
    bytes service_name = 1;
    bytes method_name = 2;
    uint32 args_size = 3;
}